[
  {
    "abstract" : [
      {
        "code" : "sqrt(x*x + y*y)",
        "type" : "codeVoice"
      },
      {
        "text" : ", computed in a manner that avoids spurious overflow or",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "underflow.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "hypot"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/hypot(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/hypot(_:_:)",
    "taskGroups" : [

    ],
    "title" : "hypot(_:_:)",
    "usr" : "s:10RealModule0A9FunctionsP5hypotyxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "code" : "z",
        "type" : "codeVoice"
      },
      {
        "text" : " axis, typically - but uniformly - depth.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "z"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension\/z",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/z",
    "taskGroups" : [

    ],
    "title" : "AxisDimension.z",
    "usr" : "s:8SwiftViz13AxisDimensionO1zyA2CmF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "integerLiteral"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(integerliteral:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(integerLiteral:)",
    "taskGroups" : [

    ],
    "title" : "init(integerLiteral:)",
    "usr" : "s:13ComplexModule0A0V14integerLiteralACyxGSi_tcfc"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/numerics",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/Numerics",
    "taskGroups" : [

    ],
    "title" : "Numerics",
    "usr" : "Numerics"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "=="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/==(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/==(_:_:)",
    "taskGroups" : [

    ],
    "title" : "==(_:_:)",
    "usr" : "s:13ComplexModule0A0V2eeoiySbACyxG_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SL",
        "text" : "Comparable"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sj",
        "text" : "Numeric"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP",
        "text" : "NiceValue"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/InputType",
    "taskGroups" : [

    ],
    "title" : "InputType",
    "usr" : "s:8SwiftViz5ScaleP9InputTypeQa"
  },
  {
    "abstract" : [
      {
        "text" : "The point at infinity.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "infinity"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/infinity",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/infinity",
    "taskGroups" : [

    ],
    "title" : "infinity",
    "usr" : "s:13ComplexModule0A0V8infinityACyxGvpZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/!=(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/==(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a nice minimum value for a given range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceMinimumValueForRange"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue\/niceminimumvalueforrange(min:max:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceMinimumValueForRange(min:max:)",
    "taskGroups" : [

    ],
    "title" : "niceMinimumValueForRange(min:max:)",
    "usr" : "s:8SwiftViz9NiceValueP011niceMinimumD8ForRange3min3max10NumberTypeQzAH_AHtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sinh(_:)",
    "taskGroups" : [

    ],
    "title" : "sinh(_:)",
    "usr" : "s:13ComplexModule0A0V4sinhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:13ComplexModule0A0V4sqrtyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+(_:)",
    "taskGroups" : [

    ],
    "title" : "+(_:)",
    "usr" : "s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V11domainLowerSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale for dates that maps values between the lower and upper bounds you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4DateV",
        "text" : "Date"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4DateV",
        "text" : "Date"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:_:)-2k33g",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-2k33g",
    "taskGroups" : [

    ],
    "title" : "create(_:_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC06DoubleD0V10Foundation4DateV_AItFZ"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is finite.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isFinite"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isfinite",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isFinite",
    "taskGroups" : [

    ],
    "title" : "isFinite",
    "usr" : "s:13ComplexModule0A0V8isFiniteSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz5ScaleP12domainHigher9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values within the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-1w8dl",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-1w8dl",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC06DoubleD0VSNySdGFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V5scale_4from2toSfSgSi_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale for dates that maps values within the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4DateV",
        "text" : "Date"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-7ombg",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-7ombg",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC06DoubleD0VSNy10Foundation4DateVGFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-(_:_:)",
    "taskGroups" : [

    ],
    "title" : "-(_:_:)",
    "usr" : "s:13ComplexModule0A0V1soiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "RealFunctions"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/atan2(y:x:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/erf(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/erfc(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/exp10(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/exp2(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/gamma(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/hypot(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/log10(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/log2(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/logGamma(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/signGamma(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "RealFunctions",
    "usr" : "s:10RealModule0A9FunctionsP"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V11domainLowerSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "The location where the tick should be placed within a chart’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "rangeLocation"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV10OutputTypexmfp",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/rangelocation",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/rangeLocation",
    "taskGroups" : [

    ],
    "title" : "rangeLocation",
    "usr" : "s:8SwiftViz9TickLabelV13rangeLocationxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : " axis, typically - but uniformly - horizontal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "x"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension\/x",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/x",
    "taskGroups" : [

    ],
    "title" : "AxisDimension.x",
    "usr" : "s:8SwiftViz13AxisDimensionO1xyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new linear scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V4from2to9transform12desiredTicksAESi_SiAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The sign of the gamma function, Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "signGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s17FloatingPointSignO",
        "text" : "FloatingPointSign"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/signgamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/signGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "signGamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP9signGammays17FloatingPointSignOxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/(_:_:)-94u8w",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE1doiyxx_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V5scale_4from2toSfSgSd_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V6invert_4from2toSfSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values from 0 to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-1zkgi",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-1zkgi",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC06DoubleD0VSdFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Replaces a with the (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "\/=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2deoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A linear scale is created using a continuous input of type double converting to an output of type float.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LinearScale.DoubleScale",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The phase (angle, or “argument”).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/phase",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/phase",
    "taskGroups" : [

    ],
    "title" : "phase",
    "usr" : "s:13ComplexModule0A0V5phasexvp"
  },
  {
    "abstract" : [
      {
        "text" : "Replaces a with the (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/\/=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "\/=(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldP2deoiyyxz_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V5scale_4from2toSfSgSi_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values between the lower and upper bounds you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:_:)-5h8y8",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-5h8y8",
    "taskGroups" : [

    ],
    "title" : "create(_:_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC06DoubleD0VSd_SdtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The imaginary part of this complex value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "imaginary"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/imaginary",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/imaginary",
    "taskGroups" : [

    ],
    "title" : "imaginary",
    "usr" : "s:13ComplexModule0A0V9imaginaryxvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-=(_:_:)-7i0xi",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-=(_:_:)-7i0xi",
    "taskGroups" : [

    ],
    "title" : "-=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2seoiyyACyxGz_AEtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/additivearithmetic-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+=(_:_:)-247oi",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+=(_:_:)-6pgx9",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-=(_:_:)-7i0xi",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-=(_:_:)-85whw"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/zero-52bzy",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/zero-5ejwo"
        ],
        "title" : "Type Properties"
      }
    ],
    "title" : "AdditiveArithmetic Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s7DecoderP",
        "text" : "Decoder"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(from:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(from:)",
    "taskGroups" : [

    ],
    "title" : "init(from:)",
    "usr" : "s:13ComplexModule0A0VAASeRzrlE4fromACyxGs7Decoder_p_tKcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz5ScaleP13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a power scale that maps values within the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO",
        "text" : "PowerScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/create(_:exponent:)-8clnb",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:exponent:)-8clnb",
    "taskGroups" : [

    ],
    "title" : "create(_:exponent:)",
    "usr" : "s:8SwiftViz10PowerScaleO6create_8exponentAC06DoubleD0VSNySdG_SdtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of power scales.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "PowerScale"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:_:exponent:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:exponent:)-3wlyt",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:exponent:)-8clnb"
        ],
        "title" : "Creating Power Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale"
        ],
        "title" : "Types of Power Scales"
      }
    ],
    "title" : "PowerScale",
    "usr" : "s:8SwiftViz10PowerScaleO"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V11domainLowerSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "The reciprocal of this value, if it can be computed without undue",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "overflow or underflow.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/reciprocal-1twmy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:13ComplexModule0A0V10reciprocalACyxGSgvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V6invert_4from2toSdSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.IntScale.InputType",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The additive identity, with real and imaginary parts both zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "zero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/zero-52bzy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/zero-52bzy",
    "taskGroups" : [

    ],
    "title" : "zero",
    "usr" : "s:13ComplexModule0A0V4zeroACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "exp(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "expMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/expminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/expMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "expMinusOne(_:)",
    "usr" : "s:13ComplexModule0A0V11expMinusOneyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The nth root of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "root"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/root(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/root(_:_:)",
    "taskGroups" : [

    ],
    "title" : "root(_:_:)",
    "usr" : "s:13ComplexModule0A0V4rootyACyxGAE_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/tanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/tanh(_:)",
    "taskGroups" : [

    ],
    "title" : "tanh(_:)",
    "usr" : "s:13ComplexModule0A0V4tanhyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/hashable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Hashable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/hash(into:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Hashable Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/!=(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/cosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/cosh(_:)",
    "taskGroups" : [

    ],
    "title" : "cosh(_:)",
    "usr" : "s:13ComplexModule0A0V4coshyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex"
        ],
        "title" : "Structures"
      }
    ],
    "title" : "ComplexModule",
    "usr" : "ComplexModule"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:8SwiftViz16ChartOrientationO"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.DoubleScale.OutputType",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/\/(_:_:)-78ojs",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:13ComplexModule0A0V1doiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A unique identifier for the tick instance.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4UUIDV",
        "text" : "UUID"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/id-e61y",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/id-e61y",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:8SwiftViz4TickV2id10Foundation4UUIDVvp"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isZero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/iszero",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isZero",
    "taskGroups" : [

    ],
    "title" : "isZero",
    "usr" : "s:13ComplexModule0A0V6isZeroSbvp"
  },
  {
    "abstract" : [
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : " raised to the nth power.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/pow(_:_:)-9imp6",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-9imp6",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3powyxx_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V12domainHigherSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.FloatScale.OutputType",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values between the lower and upper bounds you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V",
        "text" : "IntScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:_:)-3g58s",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-3g58s",
    "taskGroups" : [

    ],
    "title" : "create(_:_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC03IntD0VSi_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values from 0 to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V",
        "text" : "IntScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-6el22",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-6el22",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC03IntD0VSiFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Sine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/sin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sin(_:)",
    "taskGroups" : [

    ],
    "title" : "sin(_:)",
    "usr" : "s:13ComplexModule0A0V3sinyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A logarithmic scale created with a continuous input domain that provides methods to convert values within that domain to an output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LogScale.DoubleScale",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Convenience initializer for TickLabel",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLocation"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV10OutputTypexmfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/init(rangelocation:value:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/init(rangeLocation:value:)",
    "taskGroups" : [

    ],
    "title" : "init(rangeLocation:value:)",
    "usr" : "s:8SwiftViz9TickLabelV13rangeLocation5valueACyxGx_SStcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Generates a range of numbers with a minimum, maximum, and step interval that’s visually pleasing.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "rangeOfNiceValues"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "ofSize"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue\/rangeofnicevalues(min:max:ofsize:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/rangeOfNiceValues(min:max:ofSize:)",
    "taskGroups" : [

    ],
    "title" : "rangeOfNiceValues(min:max:ofSize:)",
    "usr" : "s:8SwiftViz9NiceValueP07rangeOfC6Values3min3max6ofSizeSay10NumberTypeQzGAI_AISitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Cosine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/cos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/cos(_:)",
    "taskGroups" : [

    ],
    "title" : "cos(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3cosyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The base-10 logarithm of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/log10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/log10(_:)",
    "taskGroups" : [

    ],
    "title" : "log10(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5log10yxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values within the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V",
        "text" : "IntScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-6u15q",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-6u15q",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC03IntD0VSNySiGFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The multiplicative identity, with real part one and imaginary part zero.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "one"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/one",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/one",
    "taskGroups" : [

    ],
    "title" : "one",
    "usr" : "s:13ComplexModule0A0V3oneACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.FloatScale.OutputType",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V10OutputTypea"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The Euclidean norm (a.k.a. 2-norm, ",
        "type" : "text"
      },
      {
        "code" : "sqrt(real*real + imaginary*imaginary)",
        "type" : "codeVoice"
      },
      {
        "text" : ").",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/length",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/length",
    "taskGroups" : [

    ],
    "title" : "length",
    "usr" : "s:13ComplexModule0A0V6lengthxvp"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A namespace for “augmented arithmetic” operations for types conforming to",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "code" : "Real",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Augmented"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/fastTwoSum(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/product(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/sum(large:small:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/twoProdFMA(_:_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "Augmented",
    "usr" : "s:10RealModule9AugmentedO"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/decodable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Decodable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(from:)"
        ],
        "title" : "Initializers"
      }
    ],
    "title" : "Decodable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The nth root of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "root"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/root(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/root(_:_:)",
    "taskGroups" : [

    ],
    "title" : "root(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4rootyxx_SitFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+(_:_:)",
    "taskGroups" : [

    ],
    "title" : "+(_:_:)",
    "usr" : "s:13ComplexModule0A0V1poiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4sqrtyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASi9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySiAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A linear scale is created using a continuous input of type float  converting to an output of type float.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "FloatScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LinearScale.FloatScale",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V12domainExtentSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SO",
        "text" : "ObjectIdentifier"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/id-7vmvo",
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/id-7vmvo",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:s12IdentifiablePsRlzCrlE2idSOvp::SYNTHESIZED::s:8SwiftViz4TickV"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new linear scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V4from2to9transform12desiredTicksAESd_SdAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V6invert_4from2toSfSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V11domainLowerSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The identifier for a dimension the chart visualizes.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AxisDimension"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/x",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/y",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/z"
        ],
        "title" : "Enumeration Cases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/Equatable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "AxisDimension",
    "usr" : "s:8SwiftViz13AxisDimensionO"
  },
  {
    "abstract" : [
      {
        "text" : "A “canonical” representation of the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "canonicalized"
      },
      {
        "kind" : "text",
        "text" : ": `Self`"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/canonicalized",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/canonicalized",
    "taskGroups" : [

    ],
    "title" : "canonicalized",
    "usr" : "s:13ComplexModule0A0V13canonicalizedACyxGvp"
  },
  {
    "abstract" : [
      {
        "text" : "Full initializer for a TickLabel",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4UUIDV",
        "text" : "UUID"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLocation"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV10OutputTypexmfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/init(id:rangelocation:value:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/init(id:rangeLocation:value:)",
    "taskGroups" : [

    ],
    "title" : "init(id:rangeLocation:value:)",
    "usr" : "s:8SwiftViz9TickLabelV2id13rangeLocation5valueACyxG10Foundation4UUIDV_xSStcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Cosine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/cos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/cos(_:)",
    "taskGroups" : [

    ],
    "title" : "cos(_:)",
    "usr" : "s:13ComplexModule0A0V3cosyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "PowerScale.DoubleScale.InputType",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "PowerScale.DoubleScale.OutputType",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse sine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/asin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/asin(_:)",
    "taskGroups" : [

    ],
    "title" : "asin(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4asinyxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/elementaryfunctions-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/ElementaryFunctions-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/sqrt(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-(_:)",
    "taskGroups" : [

    ],
    "title" : "-(_:)",
    "usr" : "s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V12domainExtentSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a complex value specified with polar coordinates.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(length:phase:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(length:phase:)",
    "taskGroups" : [

    ],
    "title" : "init(length:phase:)",
    "usr" : "s:13ComplexModule0A0V6length5phaseACyxGx_xtcfc"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/identifiable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/Identifiable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/id-7vmvo"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "Identifiable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "A complex number constructed by specifying the real and imaginary parts.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:_:)",
    "taskGroups" : [

    ],
    "title" : "init(_:_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGx_xtcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF"
  },
  {
    "abstract" : [
      {
        "text" : "The trailing edge or face of a chart based on the locale’s RTL setting.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "trailing"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/trailing",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/trailing",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.trailing",
    "usr" : "s:8SwiftViz16ChartOrientationO8trailingyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V12domainHigherSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V12domainExtentSivp"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "The upper edgeor face of a chart.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "upper"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/upper",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/upper",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.upper",
    "usr" : "s:8SwiftViz16ChartOrientationO5upperyA2CmF"
  },
  {
    "abstract" : [
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : ", if it can be represented exactly in this type; otherwise ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "exactly"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VAASBRzrlE7exactlyACyxGSgACyqd__G_tc04RealB00D0Rd__SBRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(exactly:)-767k9",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(exactly:)-767k9",
    "taskGroups" : [

    ],
    "title" : "init(exactly:)",
    "usr" : "s:13ComplexModule0A0VAASBRzrlE7exactlyACyxGSgACyqd__G_tc04RealB00D0Rd__SBRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.DoubleScale.InputType",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A complex number represented by real and imaginary parts.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-4csd3",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-5aesj",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-80jml",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(exactly:)-767k9",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(imaginary:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(length:phase:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/canonicalized",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/conjugate",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/imaginary",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isFinite",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isNormal",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isSubnormal",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isZero",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/length",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/lengthSquared",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/normalized",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/phase",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/polar",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/real",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/unsafeLengthSquared"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/i",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/infinity",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/one"
        ],
        "title" : "Type Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/AdditiveArithmetic-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/AlgebraicField-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/CustomDebugStringConvertible-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/CustomStringConvertible-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Decodable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/ElementaryFunctions-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Encodable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Equatable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/ExpressibleByIntegerLiteral-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Hashable-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Numeric-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/SignedNumeric-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Complex",
    "usr" : "s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The value of the tick.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV9InputTypexmfp",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/value",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/value",
    "taskGroups" : [

    ],
    "title" : "value",
    "usr" : "s:8SwiftViz4TickV5valuexvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse tangent) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/atan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/atan(_:)",
    "taskGroups" : [

    ],
    "title" : "atan(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4atanyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V5scale_4from2toSfSgSf_S2ftF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V6invert_4from2toSdSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "A type that has elementary functions available.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ElementaryFunctions"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/acos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/acosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/asin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/asinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/atan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/atanh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/cos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/cosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/exp(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/log(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/log(onePlus:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-2qmul",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-9imp6",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/root(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sqrt(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/tan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/tanh(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions",
    "usr" : "s:10RealModule19ElementaryFunctionsP"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "encode"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s7EncoderP",
        "text" : "Encoder"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/encode(to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/encode(to:)",
    "taskGroups" : [

    ],
    "title" : "encode(to:)",
    "usr" : "s:13ComplexModule0A0VAASERzrlE6encode2toys7Encoder_p_tKF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "debugDescription"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/debugdescription",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/debugDescription",
    "taskGroups" : [

    ],
    "title" : "debugDescription",
    "usr" : "s:13ComplexModule0A0V16debugDescriptionSSvp"
  },
  {
    "abstract" : [
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " rounded to the nearest representable value of this type.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VAASBRzrlEyACyxGACyqd__Gc04RealB00C0Rd__SBRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">)"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-80jml",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-80jml",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VAASBRzrlEyACyxGACyqd__Gc04RealB00C0Rd__SBRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal with specified tolerances.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "absoluteTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
    "usr" : "s:Sj10RealModuleSF9MagnitudeRpzrlE20isApproximatelyEqual2to17absoluteTolerance08relativeI0Sbx_A2CtF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "unsafeLengthSquared"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/unsafelengthsquared",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/unsafeLengthSquared",
    "taskGroups" : [

    ],
    "title" : "unsafeLengthSquared",
    "usr" : "s:13ComplexModule0A0V19unsafeLengthSquaredxvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "*"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/*(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/*(_:_:)",
    "taskGroups" : [

    ],
    "title" : "*(_:_:)",
    "usr" : "s:13ComplexModule0A0V1moiyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/atanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/atanh(_:)",
    "taskGroups" : [

    ],
    "title" : "atanh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5atanhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Square_root",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sqrt"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/sqrt(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/sqrt(_:)",
    "taskGroups" : [

    ],
    "title" : "sqrt(_:)",
    "usr" : "s:10RealModule0A0PAAE4sqrtyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF"
  },
  {
    "abstract" : [
      {
        "text" : "The logarithm of the absolute value of the gamma function, log(|Γ(x)|).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "logGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/loggamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/logGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "logGamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP8logGammayxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/numeric-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Numeric-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/*(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/*=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(exactly:)-282ck"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/magnitude"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:relativeTolerance:norm:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Numeric Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The complex exponential function e^z whose base ",
        "type" : "text"
      },
      {
        "code" : "e",
        "type" : "codeVoice"
      },
      {
        "text" : " is the base of the",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "natural logarithm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/exp(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/exp(_:)",
    "taskGroups" : [

    ],
    "title" : "exp(_:)",
    "usr" : "s:13ComplexModule0A0V3expyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse sine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/asin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/asin(_:)",
    "taskGroups" : [

    ],
    "title" : "asin(_:)",
    "usr" : "s:13ComplexModule0A0V4asinyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/signednumeric-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/SignedNumeric-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-(_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/negate()"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "SignedNumeric Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new linear scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V4from2to9transform12desiredTicksAESf_SfAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASi9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySiAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/asinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/asinh(_:)",
    "taskGroups" : [

    ],
    "title" : "asinh(_:)",
    "usr" : "s:13ComplexModule0A0V5asinhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V6invert_4from2toSiSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V12domainHigherSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/atanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/atanh(_:)",
    "taskGroups" : [

    ],
    "title" : "atanh(_:)",
    "usr" : "s:13ComplexModule0A0V5atanhyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified imaginary part and zero real part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "imaginary"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(imaginary:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(imaginary:)",
    "taskGroups" : [

    ],
    "title" : "init(imaginary:)",
    "usr" : "s:13ComplexModule0A0V9imaginaryACyxGx_tcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a tuple that provide nice conversions of the minimum, step value, maximum for a range with a desired number of steps.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceMinStepMax"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "max"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "ofSize"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue\/niceminstepmax(min:max:ofsize:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceMinStepMax(min:max:ofSize:)",
    "taskGroups" : [

    ],
    "title" : "niceMinStepMax(min:max:ofSize:)",
    "usr" : "s:8SwiftViz9NiceValueP14niceMinStepMax3min3max6ofSize10NumberTypeQz_A2ItAI_AISitFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/customstringconvertible-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/CustomStringConvertible-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/description"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "abstract" : [
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : " raised to the nth power.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/pow(_:_:)-5a1pd",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/pow(_:_:)-5a1pd",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:13ComplexModule0A0V3powyACyxGAE_SitFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0VyACyxGqd__cSzRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-4csd3",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-4csd3",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGqd__cSzRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Sine",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sin"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sin(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sin(_:)",
    "taskGroups" : [

    ],
    "title" : "sin(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3sinyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.FloatScale.InputType",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V12domainHigherSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASd9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySdAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a power function and maps the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V5scale_4from2toSfSgSd_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new power scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/init(from:to:exponent:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/init(from:to:exponent:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:exponent:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V4from2to8exponent9transform12desiredTicksAESd_S2dAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/ticks(rangelower:rangehigher:)-4uxek",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-4uxek",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASd9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySdAIGGAI_AItF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "zero"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/zero-5ejwo",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/zero-5ejwo",
    "taskGroups" : [

    ],
    "title" : "zero",
    "usr" : "s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal with specified",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "tolerances and norm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "absoluteTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "norm"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:absoluteTolerance:relativeTolerance:norm:)",
    "usr" : "s:s18AdditiveArithmeticP10RealModuleE20isApproximatelyEqual2to17absoluteTolerance08relativeJ04normSbx_qd__qd__qd__xXEtSFRd__lF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V12domainExtentSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Tangent",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/tan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/tan(_:)",
    "taskGroups" : [

    ],
    "title" : "tan(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3tanyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V12desiredTicksSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+=(_:_:)-6pgx9",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+=(_:_:)-6pgx9",
    "taskGroups" : [

    ],
    "title" : "+=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2peoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/sinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/sinh(_:)",
    "taskGroups" : [

    ],
    "title" : "sinh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4sinhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "exp(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "expMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "expMinusOne(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP11expMinusOneyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The error function evaluated at ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "erf"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/erf(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/erf(_:)",
    "taskGroups" : [

    ],
    "title" : "erf(_:)",
    "usr" : "s:10RealModule0A9FunctionsP3erfyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V12domainHigherSivp"
  },
  {
    "abstract" : [
      {
        "text" : "The ∞-norm of the value (",
        "type" : "text"
      },
      {
        "code" : "max(abs(real), abs(imaginary))",
        "type" : "codeVoice"
      },
      {
        "text" : ").",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "magnitude"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/magnitude",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/magnitude",
    "taskGroups" : [

    ],
    "title" : "magnitude",
    "usr" : "s:13ComplexModule0A0V9magnitudexvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "FloatScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LogScale.FloatScale",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.FloatScale.InputType",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The base-2 logarithm of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/log2(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/log2(_:)",
    "taskGroups" : [

    ],
    "title" : "log2(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4log2yxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The face of the chart farthest from the view.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "background"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/background",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/background",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.background",
    "usr" : "s:8SwiftViz16ChartOrientationO10backgroundyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz9TickScaleP12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values within the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SN",
        "text" : "ClosedRange"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V",
        "text" : "FloatScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-7iet9",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-7iet9",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC05FloatD0VSNySfGFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/expressiblebyintegerliteral-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/ExpressibleByIntegerLiteral-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(integerLiteral:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/IntegerLiteralType"
        ],
        "title" : "Type Aliases"
      }
    ],
    "title" : "ExpressibleByIntegerLiteral Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Exponential_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " e^x whose base ",
        "type" : "text"
      },
      {
        "code" : "e",
        "type" : "codeVoice"
      },
      {
        "text" : " is the base of the",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "natural logarithm.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/exp(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/exp(_:)",
    "taskGroups" : [

    ],
    "title" : "exp(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3expyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V11domainLowerSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "A linear scale is created using a continuous input of type int  converting to an output of type float.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "IntScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LinearScale.IntScale",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(_:)-5aesj",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(_:)-5aesj",
    "taskGroups" : [

    ],
    "title" : "init(_:)",
    "usr" : "s:13ComplexModule0A0VyACyxGxcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V12domainHigherSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a power scale that maps values from 0 to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO",
        "text" : "PowerScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/create(_:exponent:)-3wlyt",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:exponent:)-3wlyt",
    "taskGroups" : [

    ],
    "title" : "create(_:exponent:)",
    "usr" : "s:8SwiftViz10PowerScaleO6create_8exponentAC06DoubleD0VSd_SdtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of logarithmic scales.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LogScale"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale"
        ],
        "title" : "Types of Log Scales"
      }
    ],
    "title" : "LogScale",
    "usr" : "s:8SwiftViz8LogScaleO"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/algebraicfield-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/AlgebraicField-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/(_:_:)-78ojs",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/(_:_:)-94u8w",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/\/=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/reciprocal-1twmy",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "AlgebraicField Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The face or edge a chart visualization.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ChartOrientation"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/background",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/foreground",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/leading",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/lower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/trailing",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/upper"
        ],
        "title" : "Enumeration Cases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/Equatable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "ChartOrientation",
    "usr" : "s:8SwiftViz16ChartOrientationO"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V5scale_4from2toSfSgSd_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The value of the tick in a string representation.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/value",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/value",
    "taskGroups" : [

    ],
    "title" : "value",
    "usr" : "s:8SwiftViz9TickLabelV5valueSSvp"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz5ScaleP12domainExtent9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V11domainLowerSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/identifiable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/Identifiable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/id-1fm9l"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "Identifiable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.DoubleScale.InputType",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:8SwiftViz13AxisDimensionO"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale isn’t influenced by the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "none"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform\/none",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/none",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.none",
    "usr" : "s:8SwiftViz19DomainDataTransformO4noneyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms the input value using a linear function to the resulting value into the range you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V5scale_4from2toSfSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The imaginary unit.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "i"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/i",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/i",
    "taskGroups" : [

    ],
    "title" : "i",
    "usr" : "s:13ComplexModule0A0V1iACyxGvpZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a nice version of the number that’s visually appealing for chart axis values.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "niceVersion"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "min"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP10NumberTypeQa",
        "text" : "NumberType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue\/niceversion(for:min:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceVersion(for:min:)",
    "taskGroups" : [

    ],
    "title" : "niceVersion(for:min:)",
    "usr" : "s:8SwiftViz9NiceValueP11niceVersion3for3min10NumberTypeQzAH_SbtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a power scale that maps values between the lower and upper bounds you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO",
        "text" : "PowerScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/create(_:_:exponent:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/create(_:_:exponent:)",
    "taskGroups" : [

    ],
    "title" : "create(_:_:exponent:)",
    "usr" : "s:8SwiftViz10PowerScaleO6create__8exponentAC06DoubleD0VSd_S2dtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/customdebugstringconvertible-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/CustomDebugStringConvertible-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/debugDescription"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The face of a chart closest to the viewer.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "foreground"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/foreground",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/foreground",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.foreground",
    "usr" : "s:8SwiftViz16ChartOrientationO10foregroundyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : "  (inverse tangent) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/atan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/atan(_:)",
    "taskGroups" : [

    ],
    "title" : "atan(_:)",
    "usr" : "s:13ComplexModule0A0V4atanyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "A  visual representation of a point along an axis.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Tick"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/init(value:location:)-8f3kt",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/init(value:location:)-99fw1"
        ],
        "title" : "Creating Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/id-7vmvo",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/id-e61y",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/rangeLocation",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/value"
        ],
        "title" : "Inspecting Ticks"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/Identifiable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Tick",
    "usr" : "s:8SwiftViz4TickV"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "IntScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/init(from:to:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "LogScale.IntScale",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "description"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/description",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/description",
    "taskGroups" : [

    ],
    "title" : "description",
    "usr" : "s:13ComplexModule0A0V11descriptionSSvp"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values from 0 to the upper bound you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V",
        "text" : "FloatScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:)-9xers",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-9xers",
    "taskGroups" : [

    ],
    "title" : "create(_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC05FloatD0VSfFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz5ScaleP11domainLower9InputTypeQzvp"
  },
  {
    "abstract" : [
      {
        "text" : "The gamma function Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "gamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/gamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/gamma(_:)",
    "taskGroups" : [

    ],
    "title" : "gamma(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5gammayxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "!="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform\/!=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/!=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "!=(_:_:)",
    "usr" : "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:8SwiftViz19DomainDataTransformO"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/cosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/cosh(_:)",
    "taskGroups" : [

    ],
    "title" : "cosh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4coshyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new logarithmic scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V4from2to9transform12desiredTicksAESf_SfAA19DomainDataTransformOSitcfc"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "IntegerLiteralType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/integerliteraltype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/IntegerLiteralType",
    "taskGroups" : [

    ],
    "title" : "Complex.IntegerLiteralType",
    "usr" : "s:13ComplexModule0A0V18IntegerLiteralTypea"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V12domainExtentSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/realmodule",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions"
        ],
        "title" : "Protocols"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented"
        ],
        "title" : "Enumerations"
      }
    ],
    "title" : "RealModule",
    "usr" : "RealModule"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/encodable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/Encodable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/encode(to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Encodable Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/!=(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/inputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/InputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.IntScale.InputType",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V9InputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "A boolean value that indicates whether the output vales are constrained to the min and max of the output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformType"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/transformtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/transformType",
    "taskGroups" : [

    ],
    "title" : "transformType",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V13transformTypeAA19DomainDataTransformOvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V12desiredTicksSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NumberType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SL",
        "text" : "Comparable"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sj",
        "text" : "Numeric"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue\/numbertype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/NumberType",
    "taskGroups" : [

    ],
    "title" : "NumberType",
    "usr" : "s:8SwiftViz9NiceValueP10NumberTypeQa"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale is clamped to the upper and lower values of the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "clamp"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform\/clamp",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/clamp",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.clamp",
    "usr" : "s:8SwiftViz19DomainDataTransformO5clampyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) reciprocal (multiplicative inverse) of this number,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it is representable.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/reciprocal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/reciprocal",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule0A0PAAE10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz11LinearScaleO05FloatD0V12desiredTicksSivp"
  },
  {
    "abstract" : [
      {
        "text" : "log(1 + x), computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "onePlus"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/log(oneplus:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/log(onePlus:)",
    "taskGroups" : [

    ],
    "title" : "log(onePlus:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3log7onePlusxx_tFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASf9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySfAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A type that maps values from an input ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "domain",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " to an output ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "range",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Scale"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/OutputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/transformType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform"
        ],
        "title" : "Inspecting Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/scale(_:from:to:)"
        ],
        "title" : "Converting Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainContains(_:)-2i0wq",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/transformAgainstDomain(_:)"
        ],
        "title" : "Comparing Values"
      }
    ],
    "title" : "Scale",
    "usr" : "s:8SwiftViz5ScaleP"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASd9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySdAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/acosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/acosh(_:)",
    "taskGroups" : [

    ],
    "title" : "acosh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5acoshyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Logarithm",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/log(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/log(_:)",
    "taskGroups" : [

    ],
    "title" : "log(_:)",
    "usr" : "s:13ComplexModule0A0V3logyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The number of ticks desired when creating the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/desiredticks",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/desiredTicks",
    "taskGroups" : [

    ],
    "title" : "desiredTicks",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V12desiredTicksSivp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "associatedtype"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : " : "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SL",
        "text" : "Comparable"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sj",
        "text" : "Numeric"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9NiceValueP",
        "text" : "NiceValue"
      }
    ],
    "kind" : "org.swift.docc.kind.associatedType",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "OutputType",
    "usr" : "s:8SwiftViz5ScaleP10OutputTypeQa"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of methods for dealing with data transformation when displaying against a scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DomainDataTransform"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/none",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/clamp",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/drop"
        ],
        "title" : "Domain Transform Values"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/!=(_:_:)"
        ],
        "title" : "Comparing Transform Settings"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/Equatable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "DomainDataTransform",
    "usr" : "s:8SwiftViz19DomainDataTransformO"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "fastTwoSum"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/fasttwosum(_:_:)",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/fastTwoSum(_:_:)",
    "taskGroups" : [

    ],
    "title" : "fastTwoSum(_:_:)",
    "usr" : "s:10RealModule9AugmentedO10fastTwoSumyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/domaincontains(_:)-o6mq",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainContains(_:)-o6mq",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASd9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySdAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/domaincontains(_:)-2i0wq",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/domainContains(_:)-2i0wq",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScaleP14domainContainsySb9InputTypeQzF"
  },
  {
    "abstract" : [
      {
        "text" : "The product ",
        "type" : "text"
      },
      {
        "code" : "a * b",
        "type" : "codeVoice"
      },
      {
        "text" : " represented as an implicit sum ",
        "type" : "text"
      },
      {
        "code" : "head + tail",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "product"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/product(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/product(_:_:)",
    "taskGroups" : [

    ],
    "title" : "product(_:_:)",
    "usr" : "s:10RealModule9AugmentedO7productyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) reciprocal (multiplicative inverse) of this number,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it is representable.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldP10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "log(1 + x), computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "onePlus"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/log(oneplus:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/log(onePlus:)",
    "taskGroups" : [

    ],
    "title" : "log(onePlus:)",
    "usr" : "s:13ComplexModule0A0V3log7onePlusACyxGAF_tFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a linear scale that maps values between the lower and upper bounds you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "create"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO",
        "text" : "LinearScale"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz11LinearScaleO05FloatD0V",
        "text" : "FloatScale"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/create(_:_:)-1bvlf",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-1bvlf",
    "taskGroups" : [

    ],
    "title" : "create(_:_:)",
    "usr" : "s:8SwiftViz11LinearScaleO6createyAC05FloatD0VSf_SftFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The lower edge or face of a chart.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "lower"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/lower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/lower",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.lower",
    "usr" : "s:8SwiftViz16ChartOrientationO5loweryA2CmF"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "*="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/*=(_:_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/*=(_:_:)",
    "taskGroups" : [

    ],
    "title" : "*=(_:_:)",
    "usr" : "s:13ComplexModule0A0V2meoiyyACyxGz_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The complex conjugate of this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "conjugate"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/conjugate",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/conjugate",
    "taskGroups" : [

    ],
    "title" : "conjugate",
    "usr" : "s:13ComplexModule0A0V9conjugateACyxGvp"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO05FloatD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz8LogScaleO05FloatD0V12domainExtentSfvp"
  },
  {
    "abstract" : [
      {
        "text" : "exp(y * log(x)) computed with additional internal precision.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/pow(_:_:)-2qmul",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/pow(_:_:)-2qmul",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3powyxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "asinh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/asinh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/asinh(_:)",
    "taskGroups" : [

    ],
    "title" : "asinh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP5asinhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new logarithmic scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V4from2to9transform12desiredTicksAESd_SdAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "Converts a value between the input ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "domain",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " and output ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "range",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "scale"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/scale(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/scale(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "scale(_:from:to:)",
    "usr" : "s:8SwiftViz5ScaleP5scale_4from2to10OutputTypeQzSg05InputH0Qz_A2HtF"
  },
  {
    "abstract" : [
      {
        "text" : "A unique identifier for the tick instance.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4UUIDV",
        "text" : "UUID"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/id-8zchb",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/id-8zchb",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:8SwiftViz9TickLabelV2id10Foundation4UUIDVvp"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is normal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isNormal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isnormal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isNormal",
    "taskGroups" : [

    ],
    "title" : "isNormal",
    "usr" : "s:13ComplexModule0A0V8isNormalSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "True if this value is subnormal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isSubnormal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/issubnormal",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isSubnormal",
    "taskGroups" : [

    ],
    "title" : "isSubnormal",
    "usr" : "s:13ComplexModule0A0V11isSubnormalSbvp"
  },
  {
    "abstract" : [
      {
        "text" : "A type modeling an algebraic ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : ". Refines the ",
        "type" : "text"
      },
      {
        "code" : "SignedNumeric",
        "type" : "codeVoice"
      },
      {
        "text" : " protocol,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "adding division.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AlgebraicField"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9nuhy",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/\/=(_:_:)"
        ],
        "title" : "Operators"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3"
        ],
        "title" : "Instance Properties"
      }
    ],
    "title" : "AlgebraicField",
    "usr" : "s:10RealModule14AlgebraicFieldP"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The complex number with specified real part and zero imaginary part,",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "if it can be constructed without rounding.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "exactly"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V7exactlyACyxGSgqd___tcSzRd__lufc5OtherL_qd__mfp",
        "text" : "Other"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/init(exactly:)-282ck",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/init(exactly:)-282ck",
    "taskGroups" : [

    ],
    "title" : "init(exactly:)",
    "usr" : "s:13ComplexModule0A0V7exactlyACyxGSgqd___tcSzRd__lufc"
  },
  {
    "abstract" : [
      {
        "text" : "exp(y * log(x)) computed with additional internal precision.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pow"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/pow(_:_:)-1ylad",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/pow(_:_:)-1ylad",
    "taskGroups" : [

    ],
    "title" : "pow(_:_:)",
    "usr" : "s:13ComplexModule0A0V3powyACyxGAE_AEtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new tick",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "location"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/init(value:location:)-8f3kt",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/init(value:location:)-8f3kt",
    "taskGroups" : [

    ],
    "title" : "init(value:location:)",
    "usr" : "s:8SwiftViz4TickV5value8locationACyxq_Gx_q_tcfc"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/elementaryfunctions-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/ElementaryFunctions-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/acos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/acosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/asin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/asinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/atan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/atanh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/cos(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/cosh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/exp(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/expMinusOne(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/log(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/log(onePlus:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/pow(_:_:)-1ylad",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/pow(_:_:)-5a1pd",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/root(_:_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sin(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sinh(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/sqrt(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/tan(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/tanh(_:)"
        ],
        "title" : "Type Methods"
      }
    ],
    "title" : "ElementaryFunctions Implementations"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/scale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/Scale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainContains(_:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/transformAgainstDomain(_:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "Scale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of components to provide structures that support data visualization.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.module",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale"
        ],
        "title" : "Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel"
        ],
        "title" : "Axis"
      }
    ],
    "title" : "SwiftViz",
    "usr" : "SwiftViz"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Tangent",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tan"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/tan(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/tan(_:)",
    "taskGroups" : [

    ],
    "title" : "tan(_:)",
    "usr" : "s:13ComplexModule0A0V3tanyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The lower bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/domainlower",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainLower",
    "taskGroups" : [

    ],
    "title" : "domainLower",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V11domainLowerSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Logarithm",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "log"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/log(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/log(_:)",
    "taskGroups" : [

    ],
    "title" : "log(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP3logyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The sum ",
        "type" : "text"
      },
      {
        "code" : "a + b",
        "type" : "codeVoice"
      },
      {
        "text" : " represented as an implicit sum ",
        "type" : "text"
      },
      {
        "code" : "head + tail",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sum"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "large"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "small"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/sum(large:small:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/sum(large:small:)",
    "taskGroups" : [

    ],
    "title" : "sum(large:small:)",
    "usr" : "s:10RealModule9AugmentedO3sum5large5smallx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Test if ",
        "type" : "text"
      },
      {
        "code" : "self",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "other",
        "type" : "codeVoice"
      },
      {
        "text" : " are approximately equal.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "isApproximatelyEqual"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "relativeTolerance"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "norm"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Magnitude"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/isapproximatelyequal(to:relativetolerance:norm:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/isApproximatelyEqual(to:relativeTolerance:norm:)",
    "taskGroups" : [

    ],
    "title" : "isApproximatelyEqual(to:relativeTolerance:norm:)",
    "usr" : "s:Sj10RealModuleSF9MagnitudeRpzrlE20isApproximatelyEqual2to17relativeTolerance4normSbx_A2CxXEtF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "A struct that provides string representation of a value with an accompanying location that represents a tick on an axis of a chart.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "TickLabel"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/init(id:rangeLocation:value:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/init(rangeLocation:value:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/id-8zchb",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/rangeLocation",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/value"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/makeDefaultFormatter()"
        ],
        "title" : "Type Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/Identifiable-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "TickLabel",
    "usr" : "s:8SwiftViz9TickLabelV"
  },
  {
    "abstract" : [
      {
        "text" : "A type that can be converted into an approximate value that is easier to understand.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NiceValue"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/nicevalue",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceVersion(for:min:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/NumberType"
        ],
        "title" : "Generating Nice Numbers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/rangeOfNiceValues(min:max:ofSize:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceMinStepMax(min:max:ofSize:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/NiceValue\/niceMinimumValueForRange(min:max:)"
        ],
        "title" : "Creating Ranges of Nice Numbers"
      }
    ],
    "title" : "NiceValue",
    "usr" : "s:8SwiftViz9NiceValueP"
  },
  {
    "abstract" : [
      {
        "text" : "Data processed against a scale is dropped if the value is outside of the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "drop"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/domaindatatransform\/drop",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/DomainDataTransform\/drop",
    "taskGroups" : [

    ],
    "title" : "DomainDataTransform.drop",
    "usr" : "s:8SwiftViz19DomainDataTransformO4dropyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "The upper bound of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/domainhigher",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainHigher",
    "taskGroups" : [

    ],
    "title" : "domainHigher",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V12domainHigherSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "2^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/exp2(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/exp2(_:)",
    "taskGroups" : [

    ],
    "title" : "exp2(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4exp2yxxFZ"
  },
  {
    "abstract" : [
      {
        "code" : "atan(y\/x)",
        "type" : "codeVoice"
      },
      {
        "text" : ", with sign selected according to the quadrant of ",
        "type" : "text"
      },
      {
        "code" : "(x, y)",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "atan2"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "y"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "x"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/atan2(y:x:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/atan2(y:x:)",
    "taskGroups" : [

    ],
    "title" : "atan2(y:x:)",
    "usr" : "s:10RealModule0A9FunctionsP5atan21y1xxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The complimentary error function evaluated at ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "erfc"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/erfc(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/erfc(_:)",
    "taskGroups" : [

    ],
    "title" : "erfc(_:)",
    "usr" : "s:10RealModule0A9FunctionsP4erfcyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "static function on TickLabel that returns a default Formatter",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "object to assist in creating TickLabel instances",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "makeDefaultFormatter"
      },
      {
        "kind" : "text",
        "text" : "() -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)NSFormatter",
        "text" : "Formatter"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/makedefaultformatter()",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/makeDefaultFormatter()",
    "taskGroups" : [

    ],
    "title" : "makeDefaultFormatter()",
    "usr" : "s:8SwiftViz9TickLabelV20makeDefaultFormatterSo11NSFormatterCyFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "negate"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/negate()",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/negate()",
    "taskGroups" : [

    ],
    "title" : "negate()",
    "usr" : "s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/ticks(rangelower:rangehigher:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/ticks(rangeLower:rangeHigher:)",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASf9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySfAIGGAI_AItF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "id"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SO",
        "text" : "ObjectIdentifier"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/ticklabel\/id-1fm9l",
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickLabel\/id-1fm9l",
    "taskGroups" : [

    ],
    "title" : "id",
    "usr" : "s:s12IdentifiablePsRlzCrlE2idSOvp::SYNTHESIZED::s:8SwiftViz9TickLabelV"
  },
  {
    "abstract" : [
      {
        "text" : "Implementations should be ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "conservative",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " with the reciprocal property;",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "it is OK to return ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " even in cases where a reciprocal could be",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "represented. For this reason, a default implementation that simply",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "always returns ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " is correct, but conforming types should provide",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "a better implementation if possible.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/reciprocal-5ielo",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/reciprocal-5ielo",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE10reciprocalxSgvp::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The squared length ",
        "type" : "text"
      },
      {
        "code" : "(real*real + imaginary*imaginary)",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "lengthSquared"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/lengthsquared",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/lengthSquared",
    "taskGroups" : [

    ],
    "title" : "lengthSquared",
    "usr" : "s:13ComplexModule0A0V13lengthSquaredxvp"
  },
  {
    "abstract" : [
      {
        "text" : "A collection of linear scales.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LinearScale"
      }
    ],
    "kind" : "org.swift.docc.kind.enumeration",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-1w8dl",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-1zkgi",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-6el22",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-6u15q",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-7iet9",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-7ombg",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:)-9xers",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-1bvlf",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-2k33g",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-3g58s",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/create(_:_:)-5h8y8"
        ],
        "title" : "Creating Linear Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale"
        ],
        "title" : "Types of Linear Scales"
      }
    ],
    "title" : "LinearScale",
    "usr" : "s:8SwiftViz11LinearScaleO"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values with matching strings, that are within the scale’s domain and returns a list of tick labels using the strings you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "labeledTickValues"
      },
      {
        "kind" : "text",
        "text" : "([("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ")], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/labeledtickvalues(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/labeledTickValues(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "labeledTickValues(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE07labeledC6Values_4from2toSayAA0C5LabelVyAGGGSay05InputH0Qz_SStG_A2GtF::SYNTHESIZED::s:8SwiftViz8LogScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/(_:_:)-9nuhy",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9nuhy",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldP1doiyxx_xtFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.IntScale.OutputType",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Processes a value against the scale, potentially constraining or dropping the value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "transformAgainstDomain"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/transformagainstdomain(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/transformAgainstDomain(_:)",
    "taskGroups" : [

    ],
    "title" : "transformAgainstDomain(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE22transformAgainstDomainy9InputTypeQzSgAFF::SYNTHESIZED::s:8SwiftViz11LinearScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new logarithmic scale for the upper and lower bounds of the domain you provide.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO03IntD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "transform"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz19DomainDataTransformO",
        "text" : "DomainDataTransform"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "desiredTicks"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/init(from:to:transform:desiredticks:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/init(from:to:transform:desiredTicks:)",
    "taskGroups" : [

    ],
    "title" : "init(from:to:transform:desiredTicks:)",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V4from2to9transform12desiredTicksAESi_SiAA19DomainDataTransformOSitcfc"
  },
  {
    "abstract" : [
      {
        "text" : "The length and phase (or polar coordinates) of this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "polar"
      },
      {
        "kind" : "text",
        "text" : ": (length"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ", phase"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/polar",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/polar",
    "taskGroups" : [

    ],
    "title" : "polar",
    "usr" : "s:13ComplexModule0A0V5polarx6length_x5phasetvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "+="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/+=(_:_:)-247oi",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/+=(_:_:)-247oi",
    "taskGroups" : [

    ],
    "title" : "+=(_:_:)",
    "usr" : "s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "code" : "y",
        "type" : "codeVoice"
      },
      {
        "text" : " axis, typically - but uniformly - vertical.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "y"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/axisdimension\/y",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/AxisDimension\/y",
    "taskGroups" : [

    ],
    "title" : "AxisDimension.y",
    "usr" : "s:8SwiftViz13AxisDimensionO1yyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LogScale.IntScale.OutputType",
    "usr" : "s:8SwiftViz8LogScaleO03IntD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Converts back from the output ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "range",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " to a value within the input ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "domain",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/scale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Scale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz5ScaleP6invert_4from2to9InputTypeQzSg06OutputH0Qz_A2KtF"
  },
  {
    "abstract" : [
      {
        "text" : "A power scale created with a continuous input domain that provides methods to convert values within that domain to an output range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DoubleScale"
      }
    ],
    "kind" : "org.swift.docc.kind.structure",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/init(from:to:exponent:transform:desiredTicks:)"
        ],
        "title" : "Initializers"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/desiredTicks",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainExtent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainHigher",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/domainLower",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/exponent",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/transformType"
        ],
        "title" : "Instance Properties"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/invert(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/scale(_:from:to:)"
        ],
        "title" : "Instance Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/InputType",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/OutputType"
        ],
        "title" : "Type Aliases"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/Scale-Implementations",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/TickScale-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "PowerScale.DoubleScale",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/floatscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/FloatScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz8LogScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The (approximate) quotient ",
        "type" : "text"
      },
      {
        "code" : "a\/b",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "\/"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/\/(_:_:)-9bcy2",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/\/(_:_:)-9bcy2",
    "taskGroups" : [

    ],
    "title" : "\/(_:_:)",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE1doiyxx_xtFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/equatable-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/Equatable-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/!=(_:_:)"
        ],
        "title" : "Operators"
      }
    ],
    "title" : "Equatable Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "The type used for the scale’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.typeAlias",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/outputtype",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/OutputType",
    "taskGroups" : [

    ],
    "title" : "LinearScale.DoubleScale.OutputType",
    "usr" : "s:8SwiftViz11LinearScaleO06DoubleD0V10OutputTypea"
  },
  {
    "abstract" : [
      {
        "text" : "Validates a set of TickLabels against a given scale, removing any that don’t match the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "validatedTickLabels"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz9TickLabelV",
        "text" : "TickLabel"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/validatedticklabels(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/validatedTickLabels(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "validatedTickLabels(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE09validatedC6Labels_4from2toSayAA0C5LabelVyAGGGAN_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/ticks(rangelower:rangehigher:)-5n5j1",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-5n5j1",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASf9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySfAIGGAI_AItF"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acosh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/acosh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/acosh(_:)",
    "taskGroups" : [

    ],
    "title" : "acosh(_:)",
    "usr" : "s:13ComplexModule0A0V5acoshyACyxGAEFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns a Boolean value that indicates whether the value you provided is within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainContains"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/domaincontains(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/domainContains(_:)",
    "taskGroups" : [

    ],
    "title" : "domainContains(_:)",
    "usr" : "s:8SwiftViz5ScalePAAE14domainContainsySb9InputTypeQzF::SYNTHESIZED::s:8SwiftViz8LogScaleO03IntD0V"
  },
  {
    "abstract" : [
      {
        "text" : "Implementations should be ",
        "type" : "text"
      },
      {
        "inlineContent" : [
          {
            "text" : "conservative",
            "type" : "text"
          }
        ],
        "type" : "emphasis"
      },
      {
        "text" : " with the reciprocal property;",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "it is OK to return ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " even in cases where a reciprocal could be",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "represented. For this reason, a default implementation that simply",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "always returns ",
        "type" : "text"
      },
      {
        "code" : "nil",
        "type" : "codeVoice"
      },
      {
        "text" : " is correct, but conforming types should provide",
        "type" : "text"
      },
      {
        "text" : " ",
        "type" : "text"
      },
      {
        "text" : "a better implementation if possible.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reciprocal"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m",
    "taskGroups" : [

    ],
    "title" : "reciprocal",
    "usr" : "s:10RealModule14AlgebraicFieldPAAE10reciprocalxSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "The real part of this complex value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "real"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V8RealTypexmfp",
        "text" : "RealType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/real",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/real",
    "taskGroups" : [

    ],
    "title" : "real",
    "usr" : "s:13ComplexModule0A0V4realxvp"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "twoProdFMA"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") -> (head"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ", tail"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ1TL_xmfp",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/augmented\/twoprodfma(_:_:)",
    "platforms" : [

    ],
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Augmented\/twoProdFMA(_:_:)",
    "taskGroups" : [

    ],
    "title" : "twoProdFMA(_:_:)",
    "usr" : "s:10RealModule9AugmentedO10twoProdFMAyx4head_x4tailtx_xtAA0A0RzlFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "kind" : "org.swift.docc.kind.collectionGroup",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/intscale\/tickscale-implementations",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/TickScale-Implementations",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/labeledTickValues(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/ticks(rangeLower:rangeHigher:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/IntScale\/validatedTickLabels(_:from:to:)"
        ],
        "title" : "Instance Methods"
      }
    ],
    "title" : "TickScale Implementations"
  },
  {
    "abstract" : [
      {
        "text" : "cos(x) - 1, computed in such a way as to maintain accuracy for small x.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "cosMinusOne"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/cosminusone(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/cosMinusOne(_:)",
    "taskGroups" : [

    ],
    "title" : "cosMinusOne(_:)",
    "usr" : "s:10RealModule0A0PAAE11cosMinusOneyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_function",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "tanh"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/tanh(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/tanh(_:)",
    "taskGroups" : [

    ],
    "title" : "tanh(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4tanhyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Returns an array of the locations within the output range to locate ticks for the scale.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "rangeLower"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "rangeHigher"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale\/ticks(rangelower:rangehigher:)-1vugh",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-1vugh",
    "taskGroups" : [

    ],
    "title" : "ticks(rangeLower:rangeHigher:)",
    "usr" : "s:8SwiftViz9TickScalePAASi9InputTypeRtz10RealModule0G006OutputF0RpzrlE5ticks10rangeLower0K6HigherSayAA0C0VySiAIGGAI_AItF"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/intscale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/IntScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz11LinearScaleO03IntD0V6invert_4from2toSiSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "10^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/exp10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/exp10(_:)",
    "taskGroups" : [

    ],
    "title" : "exp10(_:)",
    "usr" : "s:10RealModule0A0PAAE5exp10yxxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exponent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/exponent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/exponent",
    "taskGroups" : [

    ],
    "title" : "exponent",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V8exponentSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "A type that models the real numbers.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Real"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/cosMinusOne(_:)"
        ],
        "title" : "Type Methods"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/ElementaryFunctions-Implementations"
        ],
        "title" : "Default Implementations"
      }
    ],
    "title" : "Real",
    "usr" : "s:10RealModule0A0P"
  },
  {
    "abstract" : [
      {
        "text" : "Creates a new tick.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "?("
      },
      {
        "kind" : "externalParam",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV9InputTypexmfp",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "location"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.initializer",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/init(value:location:)-99fw1",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/init(value:location:)-99fw1",
    "taskGroups" : [

    ],
    "title" : "init(value:location:)",
    "usr" : "s:8SwiftViz4TickV5value8locationACyxq_GSgx_q_tc10RealModule0F0R_rlufc"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/doublescale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/DoubleScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO06DoubleD0V"
  },
  {
    "abstract" : [
      {
        "text" : "A normalized complex number with the same phase as this value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "normalized"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/normalized",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/normalized",
    "taskGroups" : [

    ],
    "title" : "normalized",
    "usr" : "s:13ComplexModule0A0V10normalizedACyxGSgvp"
  },
  {
    "abstract" : [
      {
        "text" : "The location where the tick should be placed within a chart’s range.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "rangeLocation"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV10OutputTypeq_mfp",
        "text" : "OutputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tick\/rangelocation",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/Tick\/rangeLocation",
    "taskGroups" : [

    ],
    "title" : "rangeLocation",
    "usr" : "s:8SwiftViz4TickV13rangeLocationq_vp"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " (inverse cosine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/elementaryfunctions\/acos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/ElementaryFunctions\/acos(_:)",
    "taskGroups" : [

    ],
    "title" : "acos(_:)",
    "usr" : "s:10RealModule19ElementaryFunctionsP4acosyxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "10^x",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "exp10"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/realfunctions\/exp10(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/RealFunctions\/exp10(_:)",
    "taskGroups" : [

    ],
    "title" : "exp10(_:)",
    "usr" : "s:10RealModule0A9FunctionsP5exp10yxxFZ"
  },
  {
    "abstract" : [
      {
        "text" : "Transforms a value within the range into the associated domain value.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "invert"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sf",
        "text" : "Float"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz10PowerScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/powerscale\/doublescale\/invert(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/PowerScale\/DoubleScale\/invert(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "invert(_:from:to:)",
    "usr" : "s:8SwiftViz10PowerScaleO06DoubleD0V6invert_4from2toSdSgSf_S2ftF"
  },
  {
    "abstract" : [
      {
        "text" : "The distance or length between the upper and lower bounds of the input domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "domainExtent"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz8LogScaleO06DoubleD0V9InputTypea",
        "text" : "InputType"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceProperty",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/logscale\/doublescale\/domainextent",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LogScale\/DoubleScale\/domainExtent",
    "taskGroups" : [

    ],
    "title" : "domainExtent",
    "usr" : "s:8SwiftViz8LogScaleO06DoubleD0V12domainExtentSdvp"
  },
  {
    "abstract" : [
      {
        "text" : "A type of scale that provides tick values from the domain it represents.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "TickScale"
      }
    ],
    "kind" : "org.swift.docc.kind.protocol",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/tickscale",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale",
    "taskGroups" : [
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/desiredTicks"
        ],
        "title" : "Inspecting Tick Scales"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-1vugh",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-4uxek",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/ticks(rangeLower:rangeHigher:)-5n5j1"
        ],
        "title" : "Generating Ticks for a Scale"
      },
      {
        "identifiers" : [
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/validatedTickLabels(_:from:to:)",
          "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/TickScale\/labeledTickValues(_:from:to:)"
        ],
        "title" : "Generating and Validating TickLabels"
      }
    ],
    "title" : "TickScale",
    "usr" : "s:8SwiftViz9TickScaleP"
  },
  {
    "abstract" : [
      {
        "text" : "The ",
        "type" : "text"
      },
      {
        "identifier" : "https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_functions",
        "isActive" : true,
        "type" : "reference"
      },
      {
        "text" : " (inverse cosine) of ",
        "type" : "text"
      },
      {
        "code" : "x",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "acos"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:13ComplexModule0A0V",
        "text" : "Complex"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/acos(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/acos(_:)",
    "taskGroups" : [

    ],
    "title" : "acos(_:)",
    "usr" : "s:13ComplexModule0A0V4acosyACyxGAEFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "hash"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "into"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s6HasherV",
        "text" : "Hasher"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/hash(into:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/hash(into:)",
    "taskGroups" : [

    ],
    "title" : "hash(into:)",
    "usr" : "s:13ComplexModule0A0V4hash4intoys6HasherVz_tF"
  },
  {
    "abstract" : [
      {
        "text" : "The leading edge or face of a chart based on the locale’s RTL setting.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "case"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "leading"
      }
    ],
    "kind" : "org.swift.docc.kind.enumerationCase",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/chartorientation\/leading",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/ChartOrientation\/leading",
    "taskGroups" : [

    ],
    "title" : "ChartOrientation.leading",
    "usr" : "s:8SwiftViz16ChartOrientationO7leadingyA2CmF"
  },
  {
    "abstract" : [
      {
        "text" : "Converts an array of values that matches the scale’s input type to a list of ticks that are within the scale’s domain.",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ticks"
      },
      {
        "kind" : "text",
        "text" : "(["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : "], "
      },
      {
        "kind" : "externalParam",
        "text" : "from"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ") -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz4TickV",
        "text" : "Tick"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP9InputTypeQa",
        "text" : "InputType"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8SwiftViz5ScaleP10OutputTypeQa",
        "text" : "OutputType"
      },
      {
        "kind" : "text",
        "text" : ">]"
      }
    ],
    "kind" : "org.swift.docc.kind.instanceMethod",
    "language" : "swift",
    "path" : "\/documentation\/swiftviz\/linearscale\/floatscale\/ticks(_:from:to:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/SwiftViz\/LinearScale\/FloatScale\/ticks(_:from:to:)",
    "taskGroups" : [

    ],
    "title" : "ticks(_:from:to:)",
    "usr" : "s:8SwiftViz9TickScalePAA10RealModule0E010OutputTypeRpzrlE5ticks_4from2toSayAA0C0Vy05InputH0QzAGGGSayANG_A2GtF::SYNTHESIZED::s:8SwiftViz11LinearScaleO05FloatD0V"
  },
  {
    "abstract" : [
      {
        "text" : "The sign of the gamma function, Γ(x).",
        "type" : "text"
      }
    ],
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "signGamma"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s17FloatingPointSignO",
        "text" : "FloatingPointSign"
      }
    ],
    "kind" : "org.swift.docc.kind.typeMethod",
    "language" : "swift",
    "path" : "\/documentation\/realmodule\/real\/signgamma(_:)",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/RealModule\/Real\/signGamma(_:)",
    "taskGroups" : [

    ],
    "title" : "signGamma(_:)",
    "usr" : "s:10RealModule0A0PAAE9signGammays17FloatingPointSignOxFZ"
  },
  {
    "availableLanguages" : [
      "swift"
    ],
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "-="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "kind" : "org.swift.docc.kind.operator",
    "language" : "swift",
    "path" : "\/documentation\/complexmodule\/complex\/-=(_:_:)-85whw",
    "referenceURL" : "doc:\/\/com.github.swiftviz.SwiftViz\/documentation\/ComplexModule\/Complex\/-=(_:_:)-85whw",
    "taskGroups" : [

    ],
    "title" : "-=(_:_:)",
    "usr" : "s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:13ComplexModule0A0V"
  }
]